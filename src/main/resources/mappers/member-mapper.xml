<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="memberMapper">
	<resultMap type="kh.study.team2.shop.member.vo.MemberVO" id="member">
		<id column="MEMBER_ID" property="memberId"/>
		<result column="MEMBER_PW" property="memberPw"/>
		<result column="MEMBER_NAME" property="memberName"/>
		<result column="MEMBER_NICKNAME" property="memberNickName"/>
		<result column="MEMBER_TELL" property="memberTell"/>
		<result column="MEMBER_ADDR" property="memberAddr"/>
		<result column="ADDR_DETAIL" property="addrDetail"/>
		<result column="MEMBER_EMAIL" property="memberEmail"/>
		<result column="MEMBER_ROLE" property="memberRole"/>
		<result column="MEMBER_STATUS" property="memberStatus"/>
		<result column="REG_DATE" property="regDate"/>
		<result column="MEMBER_RANK" property="memberRank"/>
		<result column="SALES_CNT" property="salesCnt"/>
	</resultMap> 
	
	<resultMap type="kh.study.team2.shop.manage.vo.ProfileVO" id="profile">
		<id column="PROFILE_CODE" property="profileCode"/>
		<result column="ORIGIN_NAME" property="originName"/>
		<result column="CHANGED_NAME" property="changedName"/>
		<result column="MEMBER_ID" property="memberId"/>
		<association property="memberVO" resultMap="member"/>
	</resultMap>
	
	<!-- 회원가입 -->
	<insert id="join">
		INSERT INTO SHOP_MEMBER(
					 MEMBER_ID
				    , MEMBER_PW
					, MEMBER_NAME
					, MEMBER_NICKNAME
					, MEMBER_ADDR
					, ADDR_DETAIL
					, MEMBER_TELL
					, MEMBER_EMAIL
			    ) VALUES(
				     #{memberId}
				    , #{memberPw}
				    , #{memberName}
				    , #{memberNickName}
				    , #{memberAddr}
				    , #{addrDetail}
				    , #{memberTell}
				    , #{memberEmail}
			    )
	</insert>
	
	<!-- 로그인 -->
	<select id="login" resultMap="member">
		SELECT MEMBER_ID
			, MEMBER_PW
			, MEMBER_ROLE
		FROM SHOP_MEMBER
		WHERE MEMBER_ID = #{memberId}
		AND MEMBER_STATUS = 'ACTIVE'
	</select>
	
	<!-- 아이디 중복 체크 -->
	<select id="idChk" resultType="String">
		SELECT MEMBER_ID
		FROM SHOP_MEMBER 
		WHERE MEMBER_ID = #{memberId}
	</select>
	
	<!-- 아이디 찾기  -->
	<select id="searchId" resultType="String">
		SELECT MEMBER_ID
		FROM SHOP_MEMBER
		WHERE MEMBER_NAME = #{memberName} 
		AND MEMBER_TELL = #{memberTell}
	</select>
	
	<!-- 비밀번호 찾기  -->
	<select id="searchPw" resultType="String">
		SELECT MEMBER_PW
		FROM SHOP_MEMBER
		WHERE MEMBER_EMAIL = #{memberEmail}
	</select>
	
	<!-- 회원정보 조회 -->
	<select id="selectMemberInfo" resultMap="member">
		SELECT MEMBER_ID
			, MEMBER_NAME
			, MEMBER_TELL
			, MEMBER_NICKNAME
			, MEMBER_EMAIL
			, MEMBER_ADDR||' '||ADDR_DETAIL AS MEMBER_ADDR
			, NVL(SALES_CNT,0) SALES_CNT
			, TO_CHAR(REG_DATE,'YYYY-MM-DD HH24:MI:SS') REG_DATE
		FROM SHOP_MEMBER
		WHERE MEMBER_ID = #{memberId}
	</select>
	
	<!--내정보 조회  -->
	<select id="selectMyInfo" resultMap="member">
		SELECT MEMBER_ID
			, MEMBER_NAME
			, MEMBER_TELL
			, MEMBER_ADDR
			, ADDR_DETAIL
			, MEMBER_EMAIL
		FROM SHOP_MEMBER
		WHERE MEMBER_ID = #{memberId}
	</select>
	<!--, MEMBER_ADDR||' '||ADDR_DETAIL AS MEMBER_ADDR  -->
	
	<!-- 내정보 수정 -->
	<update id="updateMyInfo">
		UPDATE SHOP_MEMBER
	    SET MEMBER_ADDR = #{memberAddr}
	    	, ADDR_DETAIL = #{addrDetail}
	        , MEMBER_TELL = #{memberTell}
	        , MEMBER_EMAIL = #{memberEmail}
	    WHERE MEMBER_ID = #{memberId}    
	</update>
	
	<!-- 프로필생성 -->
	<insert id="insertProfile">
		INSERT INTO PROFILE (
		 	 PROFILE_CODE
		 	 , MEMBER_ID
		  ) VALUES (
			 (SELECT 'PROFILE_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(PROFILE_CODE, 9))), 0) +1, 3, 0) FROM PROFILE)	
			 , #{memberId} 
		)
	</insert>
	
	<!-- 프로필정보 조회 -->
	<select id="profileInfo" resultMap="profile">
		SELECT 
			PROFILE_CODE
			, CHANGED_NAME
			, MEMBER_ID
			, (SELECT MEMBER_NICKNAME
               FROM SHOP_MEMBER
               WHERE MEMBER_ID = PROFILE.MEMBER_ID) AS MEMBER_NICKNAME
		FROM PROFILE
		WHERE MEMBER_ID = #{memberId}
	</select>
	
	<!-- 프로필 정보 조회(상품상세화면) -->
	<select id="detailProfile" resultMap="profile">
		SELECT 
			PROFILE_CODE
			, CHANGED_NAME
			, MEMBER_ID
			, (SELECT MEMBER_NICKNAME
               FROM SHOP_MEMBER
               WHERE MEMBER_ID = PROFILE.MEMBER_ID) AS MEMBER_NICKNAME
		FROM PROFILE
		WHERE MEMBER_ID = (SELECT MEMBER_ID
                            FROM SHOP_ITEM
                            WHERE ITEM_CODE = #{itemCode})
	</select>
	
	<!--프로필 이미지 수정-->
	<update id="updateProfileImg">
	  UPDATE PROFILE
	  SET CHANGED_NAME = #{changedName}
	  WHERE MEMBER_ID = #{memberId}
	</update>
	
	<!-- 닉네임 수정 -->
	<update id="updateNickName">
	  UPDATE SHOP_MEMBER
	  SET MEMBER_NICKNAME = #{memberNickName}
	  WHERE MEMBER_ID = #{memberId}
	</update>
	
	<!-- 회원 탈퇴 -->
	<update id="deleteMember">
		UPDATE SHOP_MEMBER
		SET MEMBER_STATUS = 'DELETED'
		WHERE MEMBER_ID = #{memberId}
	</update>
	
	<select id="memberRank" resultMap="member">
		SELECT MEMBER_ID
		FROM(
			SELECT MEMBER_ID
				,DENSE_RANK() OVER (ORDER BY TOTAL_SALES DESC) MEMBER_RANK
			 FROM SHOP_MEMBER 
			 WHERE TOTAL_SALES!=0 
			 ORDER BY TOTAL_SALES DESC) 
		 WHERE MEMBER_RANK&lt;=4
	</select>
	
	<update id="initPw">
		UPDATE SHOP_MEMBER
		SET
		MEMBER_PW = #{memberPw}
		WHERE MEMBER_ID = #{memberId}
	</update>
	
	
</mapper>







